{"version":3,"file":"static/js/122.2e296968.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","tmdbApi/tmdb-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'tmdbApi/tmdb-api';\n\nexport default Reviews;\n\nconst notReviewsMessage = 'We don`t have any reviews for this movie';\n\nfunction Reviews() {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  const updateReviews = useCallback(() => {\n    getReviews(id)\n      .then(data => {\n        if (data.results.length !== 0) {\n          setReviews(\n            data.results.map(\n              ({ author_details: { username }, content, id }) => {\n                const nickname = username.toUpperCase();\n                return { nickname, content, id };\n              }\n            )\n          );\n        }\n      })\n      .catch(error => console.log(error));\n  }, [id]);\n\n  useEffect(() => {\n    updateReviews();\n  }, [updateReviews]);\n\n  return reviews.length === 0 ? (\n    <p>{notReviewsMessage}</p>\n  ) : (\n    <ul>\n      {reviews.map(({ nickname, content, id }) => (\n        <li key={id}>\n          <p>{`Author: ${nickname}`}</p>\n          <article>{content}</article>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","const ORIGIN = 'https://api.themoviedb.org/3/';\nconst API_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiODRhNTAzMjMxNWZiYTc1ZjI0MGI3NDVjYTdjYzBhZiIsInN1YiI6IjY0NzBiZWJlMzM2ZTAxMDBlODBjNTYyZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.f2kRYsL7gY4sDbVFKpKd_M1rnGrppV5NDL6eESs9EQU';\n\nconst urlParams = {\n  BASE_URL: 'https://image.tmdb.org/t/p/',\n  POSTER_SIZE: 'w500',\n  PHOTO_SIZE: 'w300',\n};\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: API_TOKEN,\n  },\n};\n\nconst requestParametersTrending = {\n  pathname: 'trending/movie/day',\n  queries: { language: 'en-US' },\n};\n\nconst requestParametersMovie = {\n  pathname: 'search/movie',\n  queries: {\n    query: '',\n    include_adult: false,\n    language: 'en-US',\n    page: 1,\n  },\n};\n\nconst requestParametersDetails = {\n  pathname: '',\n  queries: { language: 'en-US' },\n};\n\nconst requestParametersCast = {\n  pathname: '',\n  queries: { language: 'en-US' },\n};\n\nconst requestParametersReviews = {\n  pathname: '',\n  queries: { language: 'en-US', page: 1 },\n};\n\nasync function getTrending() {\n  const url = buildUrlString(requestParametersTrending);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getMovies(query) {\n  requestParametersMovie.queries.query = query;\n  const url = buildUrlString(requestParametersMovie);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getDetails(id) {\n  requestParametersDetails.pathname = `movie/${id}`;\n  const url = buildUrlString(requestParametersDetails);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getCast(id) {\n  requestParametersCast.pathname = `movie/${id}/credits`;\n  const url = buildUrlString(requestParametersCast);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getReviews(id) {\n  requestParametersReviews.pathname = `movie/${id}/reviews`;\n  const url = buildUrlString(requestParametersReviews);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nfunction buildUrlString(requestParameters) {\n  const { pathname, queries } = requestParameters;\n  const queriesString = buildQueryString(queries);\n  return `${ORIGIN}${pathname}?${queriesString}`;\n}\n\nfunction buildQueryString(queries) {\n  return Object.keys(queries)\n    .map(key => {\n      return `${key}=${queries[key]}`;\n    })\n    .join('&');\n}\n\nexport { getTrending, getMovies, getDetails, getCast, getReviews, urlParams };\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["id","useParams","useState","reviews","setReviews","updateReviews","useCallback","getReviews","then","data","results","length","map","username","author_details","content","nickname","toUpperCase","catch","error","console","log","useEffect","urlParams","BASE_URL","POSTER_SIZE","PHOTO_SIZE","options","method","headers","accept","Authorization","requestParametersTrending","pathname","queries","language","requestParametersMovie","query","include_adult","page","requestParametersDetails","requestParametersCast","requestParametersReviews","getTrending","url","buildUrlString","fetch","response","json","getMovies","getDetails","getCast","requestParameters","queriesString","Object","keys","key","join","buildQueryString","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}