{"version":3,"file":"static/js/766.4e6f77bc.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/BackLink/BackLink.module.css?aa43","components/BackLink/BackLink.jsx","webpack://goit-react-hw-05-movies/./src/components/Image/Image.module.css?6061","components/Image/Image.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","tmdbApi/tmdb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"BackLink_link__Echxs\"};","import { Link } from 'react-router-dom';\nimport { HiArrowLeft } from 'react-icons/hi';\n// import PropTypes from 'prop-types';\nimport css from './BackLink.module.css';\n\nexport default BackLink;\n\n// BackLink.propTypes = {\n//   backPath: PropTypes.object.isRequired,\n// };\n\nfunction BackLink({ backPath, children }) {\n  return (\n    <Link className={css.link} to={backPath}>\n      <HiArrowLeft />\n      {children}\n    </Link>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"Image_image__82F1s\"};","import PropTypes from 'prop-types';\nimport css from './Image.module.css';\n\nexport default Image;\n\nImage.propTypes = {\n  URL: PropTypes.string.isRequired,\n  tags: PropTypes.string,\n};\n\nfunction Image({ URL, tags = 'image' }) {\n  return (\n    <>\n      <img className={css.image} src={URL} alt={tags}></img>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"MovieCard_card__G6MP-\"};","import PropTypes from 'prop-types';\nimport Image from 'components/Image';\nimport css from './MovieCard.module.css';\n\nexport default MovieCard;\n\nconst alternativeImage =\n  'https://pixabay.com/vectors/cutting-editing-filmstrip-150066/';\n\nMovieCard.propTypes = {\n  details: PropTypes.object.isRequired,\n};\n\nfunction MovieCard({ details }) {\n  const {\n    imgSrc = alternativeImage,\n    title = 'Title',\n    releaseYear = 'n/a',\n    score,\n    overview,\n    genres,\n  } = details;\n\n  return (\n    <div className={css.card}>\n      <Image URL={imgSrc} tags={`Poster \"${title}\"`} />\n\n      <div className=\"about\">\n        <h2>{`${title} (${releaseYear})`}</h2>\n        <p>{`User Score: ${score}%`}</p>\n        <h3>Overview</h3>\n        <article>{overview}</article>\n        <h4>Genres</h4>\n        <p>{genres}</p>\n      </div>\n    </div>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport BackLink from 'components/BackLink';\nimport MovieCard from 'components/MovieCard';\nimport { getDetails } from 'tmdbApi/tmdb-api';\n\nexport default MovieDetails;\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/';\nconst file_size = 'w500';\n\nfunction MovieDetails() {\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const [details, setDetails] = useState({});\n\n  const updateDetails = useCallback(() => {\n    getDetails(id)\n      .then(\n        ({\n          genres,\n          overview,\n          poster_path,\n          release_date,\n          title,\n          vote_average,\n        }) => {\n          setDetails({\n            imgSrc: `${BASE_URL}${file_size}${poster_path}`,\n            title: title,\n            releaseYear: release_date.slice(0, 4),\n            score: Math.round(vote_average * 10),\n            overview: overview,\n            genres: getGenresString(genres),\n          });\n        }\n      )\n      .catch(error => console.log(error));\n  }, [id]);\n\n  useEffect(() => {\n    updateDetails();\n  }, [updateDetails]);\n\n  return (\n    <>\n      <BackLink backPath={backLinkHref}>Go back</BackLink>\n      <MovieCard details={details} />\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n}\n\nfunction getGenresString(genres) {\n  return genres.map(genre => genre.name).join(' ');\n}\n","const ORIGIN = 'https://api.themoviedb.org/3/';\nconst API_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiODRhNTAzMjMxNWZiYTc1ZjI0MGI3NDVjYTdjYzBhZiIsInN1YiI6IjY0NzBiZWJlMzM2ZTAxMDBlODBjNTYyZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.f2kRYsL7gY4sDbVFKpKd_M1rnGrppV5NDL6eESs9EQU';\n\nconst urlParams = {\n  BASE_URL: 'https://image.tmdb.org/t/p/',\n  POSTER_SIZE: 'w500',\n  PHOTO_SIZE: 'w300',\n};\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: API_TOKEN,\n  },\n};\n\nconst requestParametersTrending = {\n  pathname: 'trending/movie/day',\n  queries: { language: 'en-US' },\n};\n\nconst requestParametersMovie = {\n  pathname: 'search/movie',\n  queries: {\n    query: '',\n    include_adult: false,\n    language: 'en-US',\n    page: 1,\n  },\n};\n\nconst requestParametersDetails = {\n  pathname: '',\n  queries: { language: 'en-US' },\n};\n\nconst requestParametersCast = {\n  pathname: '',\n  queries: { language: 'en-US' },\n};\n\nconst requestParametersReviews = {\n  pathname: '',\n  queries: { language: 'en-US', page: 1 },\n};\n\nasync function getTrending() {\n  const url = buildUrlString(requestParametersTrending);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getMovies(query) {\n  requestParametersMovie.queries.query = query;\n  const url = buildUrlString(requestParametersMovie);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getDetails(id) {\n  requestParametersDetails.pathname = `movie/${id}`;\n  const url = buildUrlString(requestParametersDetails);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getCast(id) {\n  requestParametersCast.pathname = `movie/${id}/credits`;\n  const url = buildUrlString(requestParametersCast);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getReviews(id) {\n  requestParametersReviews.pathname = `movie/${id}/reviews`;\n  const url = buildUrlString(requestParametersReviews);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nfunction buildUrlString(requestParameters) {\n  const { pathname, queries } = requestParameters;\n  const queriesString = buildQueryString(queries);\n  return `${ORIGIN}${pathname}?${queriesString}`;\n}\n\nfunction buildQueryString(queries) {\n  return Object.keys(queries)\n    .map(key => {\n      return `${key}=${queries[key]}`;\n    })\n    .join('&');\n}\n\nexport { getTrending, getMovies, getDetails, getCast, getReviews, urlParams };\n"],"names":["backPath","children","className","css","to","URL","tags","src","alt","details","imgSrc","title","releaseYear","score","overview","genres","Image","id","useParams","location","useLocation","backLinkHref","state","from","useState","setDetails","updateDetails","useCallback","getDetails","then","poster_path","release_date","vote_average","slice","Math","round","getGenresString","catch","error","console","log","useEffect","BackLink","MovieCard","map","genre","name","join","urlParams","BASE_URL","POSTER_SIZE","PHOTO_SIZE","options","method","headers","accept","Authorization","requestParametersTrending","pathname","queries","language","requestParametersMovie","query","include_adult","page","requestParametersDetails","requestParametersCast","requestParametersReviews","getTrending","url","buildUrlString","fetch","response","json","getMovies","getCast","getReviews","requestParameters","queriesString","Object","keys","key","buildQueryString"],"sourceRoot":""}