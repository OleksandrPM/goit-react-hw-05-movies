{"version":3,"file":"static/js/414.519b56c9.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.scss?c7a6","pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","tmdbApi/tmdb-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Movies_searchbar__J-O9x\"};","import { Suspense, lazy, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovies } from 'tmdbApi/tmdb-api';\nimport scss from './Movies.module.scss';\n\nconst Searchbar = lazy(() => import('../../components/Searchbar'));\nconst MoviesList = lazy(() => import('../../components/MoviesList'));\nconst Loader = lazy(() => import('../../components/Loader'));\n\nexport default Movies;\n\nconst QUERY_NAME = 'query';\n\nfunction Movies() {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(QUERY_NAME) ?? '';\n\n  useEffect(() => {\n    setSearchedMovies([]);\n    if (query !== '') {\n      try {\n        getMovies(query).then(data => {\n          if (data.results.length !== 0) {\n            const movies = data.results.map(({ id, poster_path, title }) => {\n              return { id, poster_path, title };\n            });\n            setSearchedMovies(movies);\n          } else {\n            alert(`Movies by your request \"${query}\" did not found`);\n            return;\n          }\n        });\n      } catch (error) {\n        console.log(`Error in Movies page during getMovies: ${error}`);\n      }\n    }\n  }, [query]);\n\n  const updateSearchParams = value => {\n    const searchString = value.searchString;\n    if (query !== searchString) {\n      searchString !== ''\n        ? setSearchParams({ [QUERY_NAME]: value.searchString })\n        : setSearchParams({});\n    } else {\n      if (query !== '') {\n        alert(`You are actually looking at \"${value.searchString}\" pictures`);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Searchbar className={scss.searchbar} onSubmit={updateSearchParams} />\n      <Suspense fallback={<Loader />}>\n        {searchedMovies.length !== 0 && <MoviesList movies={searchedMovies} />}\n      </Suspense>\n    </>\n  );\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const ORIGIN = 'https://api.themoviedb.org/3/';\nconst API_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiODRhNTAzMjMxNWZiYTc1ZjI0MGI3NDVjYTdjYzBhZiIsInN1YiI6IjY0NzBiZWJlMzM2ZTAxMDBlODBjNTYyZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.f2kRYsL7gY4sDbVFKpKd_M1rnGrppV5NDL6eESs9EQU';\n\nconst urlParams = {\n  BASE_URL: 'https://image.tmdb.org/t/p/',\n  POSTER_SIZE: 'w500',\n  PHOTO_SIZE: 'w300',\n};\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: API_TOKEN,\n  },\n};\n\nconst requestParametersTrending = {\n  pathname: 'trending/movie/day',\n  queries: { language: 'en-US' },\n};\n\nconst requestParametersMovie = {\n  pathname: 'search/movie',\n  queries: {\n    query: '',\n    include_adult: false,\n    language: 'en-US',\n    page: 1,\n  },\n};\n\nconst requestParametersDetails = {\n  pathname: '',\n  queries: { language: 'en-US' },\n};\n\nconst requestParametersCast = {\n  pathname: '',\n  queries: { language: 'en-US' },\n};\n\nconst requestParametersReviews = {\n  pathname: '',\n  queries: { language: 'en-US', page: 1 },\n};\n\nasync function getTrending() {\n  const url = buildUrlString(requestParametersTrending);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getMovies(query) {\n  requestParametersMovie.queries.query = query;\n  const url = buildUrlString(requestParametersMovie);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getDetails(id) {\n  requestParametersDetails.pathname = `movie/${id}`;\n  const url = buildUrlString(requestParametersDetails);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getCast(id) {\n  requestParametersCast.pathname = `movie/${id}/credits`;\n  const url = buildUrlString(requestParametersCast);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getReviews(id) {\n  requestParametersReviews.pathname = `movie/${id}/reviews`;\n  const url = buildUrlString(requestParametersReviews);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nfunction buildUrlString(requestParameters) {\n  const { pathname, queries } = requestParameters;\n  const queriesString = buildQueryString(queries);\n  return `${ORIGIN}${pathname}?${queriesString}`;\n}\n\nfunction buildQueryString(queries) {\n  return Object.keys(queries)\n    .map(key => {\n      return `${key}=${queries[key]}`;\n    })\n    .join('&');\n}\n\nexport { getTrending, getMovies, getDetails, getCast, getReviews, urlParams };\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Searchbar","lazy","MoviesList","Loader","useState","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","query","get","QUERY_NAME","useEffect","getMovies","then","data","results","length","movies","map","id","poster_path","title","alert","error","console","log","className","scss","onSubmit","value","searchString","obj","key","Object","defineProperty","enumerable","configurable","writable","Suspense","fallback","urlParams","BASE_URL","POSTER_SIZE","PHOTO_SIZE","options","method","headers","accept","Authorization","requestParametersTrending","pathname","queries","language","requestParametersMovie","include_adult","page","requestParametersDetails","requestParametersCast","requestParametersReviews","getTrending","url","buildUrlString","fetch","response","json","getDetails","getCast","getReviews","requestParameters","queriesString","keys","join","buildQueryString","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}