{"version":3,"file":"static/js/376.70d4b061.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.scss?709c","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","tmdbApi/tmdb-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"MoviesList_movie__XUGse\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport scss from './MoviesList.module.scss';\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nfunction MoviesList({ movies = [] }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <li className={scss.movie} key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchbar_searchbar__0FWoU\",\"form\":\"Searchbar_form__D-hp5\",\"button\":\"Searchbar_button__nkcjk\",\"button_label\":\"Searchbar_button_label__natIK\",\"input\":\"Searchbar_input__19umw\"};","import PropTypes from 'prop-types';\nimport css from './Searchbar.module.css';\n\nexport default Searchbar;\n\nSearchbar.propTypes = { onSubmit: PropTypes.func.isRequired };\n\nfunction Searchbar({ onSubmit }) {\n  const onSearchSubmit = event => {\n    event.preventDefault();\n    const searchString = event.currentTarget.elements.search.value\n      .trim()\n      .toLowerCase();\n    onSubmit({ searchString });\n  };\n\n  return (\n    <header className={css.searchbar}>\n      <form className={css.form} onSubmit={onSearchSubmit}>\n        <button type=\"submit\" className={css.button}>\n          <span className={css.button_label}>Search</span>\n        </button>\n\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"search\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovies } from 'tmdbApi/tmdb-api';\nimport Searchbar from 'components/Searchbar';\nimport MoviesList from 'components/MoviesList';\n\nexport default Movies;\n\nconst QUERY_NAME = 'query';\n\nfunction Movies() {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(QUERY_NAME) ?? '';\n\n  useEffect(() => {\n    setSearchedMovies([]);\n    if (query !== '') {\n      try {\n        getMovies(query).then(data => {\n          if (data.results.length !== 0) {\n            const movies = data.results.map(({ id, poster_path, title }) => {\n              return { id, poster_path, title };\n            });\n            setSearchedMovies(movies);\n          } else {\n            alert(`Movies by your request \"${query}\" did not found`);\n            return;\n          }\n        });\n      } catch (error) {\n        // setError(error);\n      } finally {\n        // setIsLoading(false);\n      }\n    }\n  }, [query]);\n\n  const updateSearchParams = value => {\n    const searchString = value.searchString;\n    if (query !== searchString) {\n      searchString !== ''\n        ? setSearchParams({ [QUERY_NAME]: value.searchString })\n        : setSearchParams({});\n    } else {\n      if (query !== '') {\n        alert(`You are actually looking at \"${value.searchString}\" pictures`);\n      }\n    }\n  };\n\n  return (\n    <>\n      <h2>Movies Page</h2>\n      <Searchbar onSubmit={updateSearchParams} />\n      {searchedMovies.length !== 0 && <MoviesList movies={searchedMovies} />}\n    </>\n  );\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const ORIGIN = 'https://api.themoviedb.org/3/';\nconst API_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiODRhNTAzMjMxNWZiYTc1ZjI0MGI3NDVjYTdjYzBhZiIsInN1YiI6IjY0NzBiZWJlMzM2ZTAxMDBlODBjNTYyZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.f2kRYsL7gY4sDbVFKpKd_M1rnGrppV5NDL6eESs9EQU';\n\nconst urlParams = {\n  BASE_URL: 'https://image.tmdb.org/t/p/',\n  POSTER_SIZE: 'w500',\n  PHOTO_SIZE: 'w300',\n};\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: API_TOKEN,\n  },\n};\n\nconst requestParametersTrending = {\n  pathname: 'trending/movie/day',\n  queries: { language: 'en-US' },\n};\n\nconst requestParametersMovie = {\n  pathname: 'search/movie',\n  queries: {\n    query: '',\n    include_adult: false,\n    language: 'en-US',\n    page: 1,\n  },\n};\n\nconst requestParametersDetails = {\n  pathname: '',\n  queries: { language: 'en-US' },\n};\n\nconst requestParametersCast = {\n  pathname: '',\n  queries: { language: 'en-US' },\n};\n\nconst requestParametersReviews = {\n  pathname: '',\n  queries: { language: 'en-US', page: 1 },\n};\n\nasync function getTrending() {\n  const url = buildUrlString(requestParametersTrending);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getMovies(query) {\n  requestParametersMovie.queries.query = query;\n  const url = buildUrlString(requestParametersMovie);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getDetails(id) {\n  requestParametersDetails.pathname = `movie/${id}`;\n  const url = buildUrlString(requestParametersDetails);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getCast(id) {\n  requestParametersCast.pathname = `movie/${id}/credits`;\n  const url = buildUrlString(requestParametersCast);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nasync function getReviews(id) {\n  requestParametersReviews.pathname = `movie/${id}/reviews`;\n  const url = buildUrlString(requestParametersReviews);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nfunction buildUrlString(requestParameters) {\n  const { pathname, queries } = requestParameters;\n  const queriesString = buildQueryString(queries);\n  return `${ORIGIN}${pathname}?${queriesString}`;\n}\n\nfunction buildQueryString(queries) {\n  return Object.keys(queries)\n    .map(key => {\n      return `${key}=${queries[key]}`;\n    })\n    .join('&');\n}\n\nexport { getTrending, getMovies, getDetails, getCast, getReviews, urlParams };\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movies","location","useLocation","map","id","title","className","scss","to","state","from","onSubmit","css","event","preventDefault","searchString","currentTarget","elements","search","value","trim","toLowerCase","type","name","autoComplete","autoFocus","placeholder","useState","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","query","get","QUERY_NAME","useEffect","getMovies","then","data","results","length","poster_path","alert","error","Searchbar","obj","key","Object","defineProperty","enumerable","configurable","writable","MoviesList","urlParams","BASE_URL","POSTER_SIZE","PHOTO_SIZE","options","method","headers","accept","Authorization","requestParametersTrending","pathname","queries","language","requestParametersMovie","include_adult","page","requestParametersDetails","requestParametersCast","requestParametersReviews","getTrending","url","buildUrlString","fetch","response","json","console","getDetails","getCast","getReviews","requestParameters","queriesString","keys","join","buildQueryString","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}